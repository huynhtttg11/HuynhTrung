global
    maxconn 2048
    stats socket /var/run/haproxy.sock mode 600 level admin

defaults
    mode http
    option forwardfor
    option http-server-close
    
    timeout connect 5s
    timeout client 60m 
    timeout server 60m

    # keep server status after reloading
    load-server-state-from-file global
    stats auth "${HAPROXY_STATS_USER}:${HAPROXY_STATS_PASSWORD}"
    default-server init-addr none

userlist VulasAdmin
    user "${FRONTEND_BUGS_USER}" insecure-password "${FRONTEND_BUGS_PASSWORD}"

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend http-in
    bind *:8080
    
    log global

    acl is_blue  dst_port 8080 
     
    # ------------ ACLs ------------
    acl is_backend path_beg -i /backend
    acl is_cia path_beg -i /cia
    acl is_bugs-admin path_beg -i /bugs
    acl is_frontend path_beg -i /apps

    # ------------ backend routing  ------------
    # N.B.: 'and' is implied between acls
    use_backend rest-backend-nodes if is_backend
    use_backend rest-lib-utils-nodes if is_cia
    use_backend frontend-bugs-nodes if is_bugs-admin
    use_backend frontend-apps-nodes if is_frontend

# frontend-apps
backend frontend-apps-nodes
    mode 	http
    balance 	roundrobin
    option 	forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    option httpchk GET /apps/ HTTP/1.1\r\nHost:\ haproxy01
    http-check expect ! rstatus ^5
    stats 	enable
    server 	frontend-apps frontend-apps:8080 check resolvers docker_resolver resolve-prefer ipv4
# --------

# rest-lib-utils
backend rest-lib-utils-nodes
    mode 	http
    log 	global
    balance 	roundrobin
    option 	forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    option httpchk GET /cia/ HTTP/1.1\r\nHost:\ haproxy01
    http-check expect ! rstatus ^5
    stats enable
    server rest-lib-utils rest-lib-utils:8092 check resolvers docker_resolver resolve-prefer ipv4
# --------

# rest-backend
backend rest-backend-nodes
    mode http
    log global
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    option httpchk GET /backend/ HTTP/1.1\r\nHost:\ haproxy01
    http-check expect ! rstatus ^5
    stats enable
    server rest-backend rest-backend:8091 check resolvers docker_resolver resolve-prefer ipv4
# --------

# frontend-bugs
backend frontend-bugs-nodes
    mode http
    log global
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    option httpchk GET /bugs/ HTTP/1.1\r\nHost:\ haproxy01
    http-check expect ! rstatus ^5
    stats enable
    server frontend-bugs frontend-bugs:8080 check resolvers docker_resolver resolve-prefer ipv4
    acl AuthOkay http_auth(VulasAdmin)
    http-request auth realm Vulas if !AuthOkay
# --------
