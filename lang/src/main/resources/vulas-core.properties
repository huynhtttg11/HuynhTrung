########## General settings

# When true, all requests (including GET and OPTIONS) will be written to folder "vulas.core.uploadDir".
# Possible values:
#   OFFLINE: No connection to the backend will be established 
#   READ_ONLY: Data will be read from the backend (using GET requests), but not written
#   READ_WRITE: Analysis results are written to the backend (using PUT and POST) requests
# Default: READ_WRITE
vulas.core.backendConnection = READ_WRITE

# Used for storing analysis results if "vulas.core.backendConnection" is set to "READ_ONLY" or "OFFLINE". When empty, "vulas.shared.tmpDir" will be used.
# Default:
#   CLI: -
#   MVN: ${project.build.directory}/vulas/upload
#vulas.core.uploadDir =

# Number of times a HTTP request will be repeated in response to 503 errors (service unavailable).
# This setting makes the CLI and Maven plugin robust against backend maintenance/update activities.
# Default: 50
vulas.core.repeatHttp.max = 50

# Waiting time between HTTP repeats (see description of "vulas.core.repeatHttp.max")
# Default: 60000 (1 min)
vulas.core.repeatHttp.waitMilli = 60000

# Group ID of the application under analysis
# Default:
#   CLI: -
#   MVN: ${project.groupId}
#vulas.core.appContext.group =

# Artifact ID of the application under analysis
# Default:
#   CLI: -
#   MVN: ${project.artifactId}
#vulas.core.appContext.artifact =

# Version of the application under analysis
# Default:
#   CLI: -
#   MVN: ${project.version}
#vulas.core.appContext.version =

# Skip the analysis of archives already known by the vulas backend 
# (based on SHA1) Note that even if the archive already exists in vulas, it 
# may include less constructs than the actual ones (perhaps a previous upload 
# failed). By default vulas always checks the number of constructs stored in 
# the backend and included in the archive at hand. If skipKnownArchive is set 
# to true, -Dcollector.override=true is ignored for the known archives
vulas.core.skipKnownArchive = false

# Overrides archive information (all existing stuff will be deleted beforehand)
# Note that this can increase the goal execution time significantly
collector.overrideArchive = false

# When true, JAR signatures will be verified. Processing fails if that is not possible
# Default: true
vulas.core.verifyJars = true

# Settings that must be present, and whose absence will result in an error
# Default: -
#vulas.core.settings.mandatory = 

# Settings that should be present, and whose absence will result in a warning
# Default: -
#vulas.core.settings.optional =



########## vulas:clean

# When true, details of past goal executions will be deleted
# Default: false
vulas.core.clean.goalHistory = false

# When true, all but the latest X application versions will be deleted (latest according to the application creation date)
# Default: false
vulas.core.clean.purgeVersions = false

# Specifies X, i.e., the number of application versions to be kept if "vulas.core.clean.purgeVersions" is set to true 
# Default: 3
vulas.core.clean.purgeVersions.keepLast = 3



########## vulas:upload

# When true, serialized HTTP requests will be deleted after the upload succeeded (incl. the JSON files)
# Default: true
vulas.core.upload.deleteAfterSuccess = true



########## vulas:spacenew, vulas:spacemod

# Used when creating or modifying a space with a given token
#vulas.core.space.name = 

# Used when creating or modifying a space with a given token
#vulas.core.space.description = 

# Determines if and how data can be exported using the Vulas backend API
# Possible values:
#   OFF: No scan results of this space are exported
#   AGGREGATED: Scan results of this space are aggregated
#   DETAILED: Scan results of each application are exported
# Default: AGGREGATED
#vulas.core.space.exportConfiguration = AGGREGATED

# Used when creating or modifying a space with a given token
# Default: true
#vulas.core.space.public = true

# Used when creating or modifying a space with a given token
# Possible values:
#   TODO
# Default: -1
#vulas.core.space.bugFilter = -1



########## vulas:app/bom

# Where application source or bytecode and application dependencies (JAR and/or WAR files) are located
# Relative or absolute paths, multiple values to be separated by comma
vulas.core.app.sourceDir =

# Whether or not empty apps (neither constructs nor dependencies) are uploaded to the backend
vulas.core.app.uploadEmpty = false

# When true, JAR not known to Vulas Maven central and not already available to the backend are posted to the backend
vulas.core.app.uploadLibrary = false



########## vulas:report

# Threshold for throwing a build exception
# Possible values: noException < dependsOn < potentiallyExecutes < actuallyExecutes
# Default: potentiallyExecutes
vulas.report.exceptionThreshold = dependsOn

# A vulnerability in blacklisted scopes will not cause an exception  (multiple scopes to be separated by comma)
# Default: test, provided
# Note: Case-sensitive before Vulas 2.2.1; for CLI, all dependencies are considered as RUNTIME dependencies
vulas.report.exceptionScopeBlacklist = TEST, PROVIDED

# Determines whether un-assessed vulnerabilities throw a build exception. Un-assessed vulns are those where
# the method signature(s) of a bug appear in an archive, however, it is yet unclear whether the methods
# exist in the fixed or vulnerable version. Those findings are marked with a question mark in the frontend.
#
# Possible values:
#   all: All un-assessed vulns will be ignored
#   known: Only un-assessed vulns in archives known to Maven Central will be ignored
#   off: Never ignore
#
# Default: known
# Note: Available as of Vulas 2.3.7
vulas.report.exceptionExcludeUnassessed = all

# Specified vulnerabilities will not cause a build exception (multiple bugs to be separated by comma)
# Default: -
vulas.report.exceptionExcludeBugs = 

# Directory to where the reports (JSON, XML, HTML) will be written to
# Default:
#   CLI: -
#   MVN: ${project.build.directory}/vulas/report
vulas.report.reportDir =



########## vulas:sequence

# Sequence of goals executed by the sequence goal
# Default: CLEAN, APP, A2C, REPORT
vulas.core.sequence.defaultGoals = CLEAN, APP, A2C, REPORT
